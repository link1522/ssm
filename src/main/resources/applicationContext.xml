<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                        http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd
                        ">

  
  <!-- 掃描 controller 以外 -->
  <context:component-scan base-package="com.example.ssm">
    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
  </context:component-scan>

  <!-- 引入 property 檔案 -->
  <context:property-placeholder location="classpath:db.properties" />

  <!-- 數據庫連接池 -->
  <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource">
      <property name="driverClassName" value="${jdbc.driver}"></property>
      <property name="url" value="${jdbc.url}"></property>
      <property name="username" value="${jdbc.username}"></property>
      <property name="password" value="${jdbc.password}"></property>
  </bean>

  <!-- mybatis -->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <!-- 指定 mybatis 文件位置 -->
    <property name="configLocation" value="classpath:mybatisConfig.xml"></property>
    <property name="dataSource" ref="druidDataSource"></property>
    <!-- 指定 mybatis mapper 文件位置 -->
    <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
  </bean>

  <!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    掃描所有 mapper 接口實現，加入到 ioc 容器中
    <property name="basePackage" value="com.example.ssm.mapper"></property>
  </bean> -->
  <mybatis:scan base-package="com.example.ssm.mapper" />

  <!-- 用來批量操作的 sqlSession -->
  <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
    <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
    <constructor-arg name="executorType" value="BATCH"></constructor-arg>
  </bean>

  <!-- 事務控制的配置 -->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="druidDataSource"></property>
  </bean>

  <!-- 配置事務 -->
  <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="*" />
      <tx:method name="select*" read-only="true"/>
    </tx:attributes>
  </tx:advice>

  <!-- 配置切面 -->
  <aop:config>
    <aop:pointcut id="txPointcut" expression="execution(* com.example.ssm.service..*(..))" />
    <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
  </aop:config>
</beans>